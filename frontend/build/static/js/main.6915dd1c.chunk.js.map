{"version":3,"sources":["constants.js","App.js","reportWebVitals.js","index.js"],"names":["API","TabPane","Tabs","App","useState","japan","setJapan","chagall","setChagall","addTicketVisible","setAddTicketVisible","serialNumber","setSerialNumber","filter","setFilter","toggleAddTicketVisible","localStorage","getItem","TOKEN","setTOKEN","axiosOptions","headers","Authorization","fetchData","exhibition","axios","get","params","then","res","data","catch","error","notification","message","description","console","useEffect","ticketNumberAddZeros","number","str","toString","length","column","title","dataIndex","render","value","sorter","a","b","ticketNumber","defaultSortOrder","Date","toLocaleDateString","record","verified","type","ghost","size","onClick","patch","success","style","marginLeft","danger","delete","filterDataSource","row","JSON","stringify","includes","searchAnything","Search","onSearch","width","marginBottom","float","allowClear","app","className","defaultActiveKey","tabBarExtraContent","tab","columns","dataSource","rowKey","visible","onCancel","okButtonProps","htmlType","form","onFinish","values","document","date","operator","client","notes","ticketNumbers","end","start","payload","documents","i","Number","parseInt","push","post","response","status","warn","name","labelCol","span","offset","wrapperCol","Item","label","rules","required","Group","compact","defaultValue","onChange","Option","noStyle","pattern","max","textAlign","placeholder","borderLeft","borderRight","pointerEvents","backgroundColor","disabled","TextArea","auth","password","setItem","token","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6915dd1c.chunk.js","sourcesContent":["const API = process.env.NODE_ENV !== 'development'\n  ? \"https://ticket.huarongdao.xyz/api\"\n  : \"http://localhost:8080/api\";\nexport { API };\n","import \"./App.css\";\nimport {\n  Table,\n  Tabs,\n  notification,\n  Button,\n  Modal,\n  Form,\n  Radio,\n  Input,\n  Select,\n} from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { API } from \"./constants\";\n\nconst { TabPane } = Tabs;\n\nfunction App() {\n  const [japan, setJapan] = useState([]);\n  const [chagall, setChagall] = useState([]);\n  const [addTicketVisible, setAddTicketVisible] = useState(false);\n  const [serialNumber, setSerialNumber] = useState(false);\n  const [filter, setFilter] = useState(\"\");\n\n  const toggleAddTicketVisible = () => setAddTicketVisible(!addTicketVisible);\n\n  const [TOKEN, setTOKEN] = useState(localStorage.getItem(\"token\") || \"\");\n\n  const axiosOptions = {\n    headers: { Authorization: TOKEN },\n  };\n\n  const fetchData = (exhibition) => {\n    if (TOKEN) {\n      axios\n        .get(`${API}/tickets`, {\n          params: {\n            exhibition,\n          },\n          headers: {\n            Authorization: TOKEN,\n          },\n        })\n        .then((res) => {\n          if (exhibition === \"chagall\") {\n            setChagall(res.data);\n          } else if (exhibition === \"japan\") {\n            setJapan(res.data);\n          }\n        })\n        .catch((error) => {\n          notification.error({\n            message: \"Error\",\n            description: `获取${exhibition}数据失败！`,\n          });\n          console.error(error);\n        });\n    }\n  };\n\n  useEffect(() => {\n    fetchData(\"japan\");\n    fetchData(\"chagall\");\n  }, [TOKEN]);\n\n  const ticketNumberAddZeros = (number) => {\n    let str = number.toString();\n    while (str.length < 5) {\n      str = \"0\" + str;\n    }\n    return str;\n  };\n\n  const column = [\n    {\n      title: \"票号\",\n      dataIndex: \"ticketNumber\",\n      render: (value) => ticketNumberAddZeros(value),\n      sorter: (a, b) => a.ticketNumber - b.ticketNumber,\n      defaultSortOrder: \"ascend\",\n    },\n    {\n      title: \"收票方\",\n      dataIndex: \"client\",\n    },\n    {\n      title: \"经手人\",\n      dataIndex: \"operator\",\n    },\n    {\n      title: \"票种\",\n      dataIndex: \"type\",\n    },\n    {\n      title: \"日期\",\n      dataIndex: \"date\",\n      render: (value) => new Date(value).toLocaleDateString(),\n    },\n    {\n      title: \"备注\",\n      dataIndex: \"notes\",\n    },\n    {\n      title: \"核销\",\n      dataIndex: \"verified\",\n      render: (value) => (value ? \"是\" : \"否\"),\n    },\n    {\n      title: \"操作\",\n      render: (value, record) => (\n        <>\n          {record.verified ? null : (\n            <Button\n              type=\"primary\"\n              ghost\n              size=\"small\"\n              onClick={() => {\n                axios\n                  .patch(\n                    `${API}/ticket/status`,\n                    {\n                      exhibition: record.exhibition,\n                      ticketNumber: record.ticketNumber,\n                      verified: true,\n                    },\n                    axiosOptions\n                  )\n                  .then(() => {\n                    fetchData(record.exhibition);\n                    notification.success({\n                      message: \"核销成功\",\n                    });\n                  })\n                  .catch((error) => {\n                    console.error(error);\n                    notification.error({\n                      message: \"核销失败\",\n                    });\n                  });\n              }}\n            >\n              核销\n            </Button>\n          )}\n          <Button\n            style={{ marginLeft: 5 }}\n            danger\n            size=\"small\"\n            onClick={() => {\n              axios\n                .delete(`${API}/ticket`, {\n                  headers: axiosOptions.headers,\n                  data: {\n                    exhibition: record.exhibition,\n                    ticketNumber: record.ticketNumber,\n                  },\n                })\n                .then(() => {\n                  fetchData(record.exhibition);\n                  notification.success({\n                    message: \"删除成功\",\n                  });\n                })\n                .catch((error) => {\n                  console.error(error);\n                  notification.error({\n                    message: \"删除失败\",\n                  });\n                });\n            }}\n          >\n            删除\n          </Button>\n        </>\n      ),\n    },\n  ];\n\n  const filterDataSource = (data) => {\n    if (filter) {\n      return data.filter((row) => JSON.stringify(row).includes(filter));\n    }\n    return data;\n  };\n\n  const searchAnything = (\n    <Input.Search\n      onSearch={(value) => setFilter(value)}\n      style={{ width: 200, marginBottom: 5, float: \"left\" }}\n      allowClear\n    />\n  );\n\n  const app = (\n    <div className=\"App\">\n      <Tabs\n        defaultActiveKey={\"japan\"}\n        tabBarExtraContent={\n          <Button size=\"small\" onClick={toggleAddTicketVisible} type=\"primary\">\n            添加纸质票\n          </Button>\n        }\n      >\n        <TabPane tab=\"Japan\" key=\"japan\">\n          {searchAnything}\n          <Table\n            columns={column}\n            dataSource={filterDataSource(japan)}\n            rowKey={(record) => record.ticketNumber}\n          />\n        </TabPane>\n        <TabPane tab=\"Chagall\" key=\"chagall\">\n          {searchAnything}\n          <Table\n            columns={column}\n            dataSource={filterDataSource(chagall)}\n            rowKey={(record) => record.ticketNumber}\n          />\n        </TabPane>\n      </Tabs>\n      <Modal\n        title=\"添加纸质票\"\n        visible={addTicketVisible}\n        onCancel={toggleAddTicketVisible}\n        okButtonProps={{ htmlType: \"submit\", form: \"addTicket\" }}\n      >\n        <Form\n          onFinish={async (values) => {\n            const document = {\n              exhibition: values.exhibition,\n              date: new Date(),\n              operator: values.operator,\n              client: values.client,\n              type: values.type,\n              notes: values.notes || \"\",\n              verified: false,\n            };\n            if (serialNumber) {\n              if (values.ticketNumbers.end < values.ticketNumbers.start) {\n                notification.error({\n                  message: \"票号错误\",\n                  description: \"起始票号必须小于结束票号！\",\n                });\n                return;\n              }\n              const { ticketNumbers } = values;\n              const payload = {\n                exhibition: values.exhibition,\n                documents: [],\n              };\n              for (\n                let i = Number.parseInt(ticketNumbers.start);\n                i <= Number.parseInt(ticketNumbers.end);\n                i++\n              ) {\n                payload.documents.push({\n                  ...document,\n                  ticketNumber: ticketNumberAddZeros(i),\n                });\n              }\n              axios\n                .post(`${API}/tickets`, payload, axiosOptions)\n                .then((res) => {\n                  fetchData(values.exhibition);\n                  notification.success({\n                    message: \"成功\",\n                    description: `成功添加${payload.documents.length}条纸质票记录`,\n                  });\n                  toggleAddTicketVisible();\n                })\n                .catch((error) => {\n                  if (error.response) {\n                    if (error.response.status === 409) {\n                      notification.warn({\n                        message: \"票号冲突\",\n                        description: \"有一部分或所有票号冲突，请重新添加\",\n                      });\n                    }\n                  } else {\n                    notification.error({\n                      message: \"失败\",\n                      description: \"添加纸质票记录失败\",\n                    });\n                  }\n                });\n            } else {\n              const payload = {\n                ...document,\n                ticketNumber: values.ticketNumber,\n              };\n              axios\n                .post(`${API}/ticket`, payload, axiosOptions)\n                .then((res) => {\n                  fetchData(values.exhibition);\n                  notification.success({\n                    message: \"成功\",\n                    description: `成功添加1条纸质票记录`,\n                  });\n                  toggleAddTicketVisible();\n                })\n                .catch((error) => {\n                  if (error.response) {\n                    if (error.response.status === 409) {\n                      notification.error({\n                        message: \"票号冲突\",\n                        description: \"票号冲突，请重新添加\",\n                      });\n                    }\n                  } else {\n                    notification.error({\n                      message: \"失败\",\n                      description: \"添加纸质票记录失败\",\n                    });\n                  }\n                });\n            }\n          }}\n          name=\"addTicket\"\n          labelCol={{ span: 4, offset: 2 }}\n          wrapperCol={{ span: 16 }}\n        >\n          <Form.Item\n            label=\"展览\"\n            name=\"exhibition\"\n            rules={[{ required: true, message: \"必须选择展览\" }]}\n          >\n            <Radio.Group>\n              <Radio value=\"japan\">日本动漫</Radio>\n              <Radio value=\"chagall\">夏加尔</Radio>\n            </Radio.Group>\n          </Form.Item>\n          <Form.Item label=\"票号\">\n            <Input.Group compact>\n              <Select\n                defaultValue={1}\n                onChange={(value) => {\n                  value === 1 ? setSerialNumber(false) : setSerialNumber(true);\n                }}\n              >\n                <Select.Option value={1}>单张</Select.Option>\n                <Select.Option value={2}>连号</Select.Option>\n              </Select>\n              {serialNumber ? (\n                <>\n                  <Form.Item\n                    name={[\"ticketNumbers\", \"start\"]}\n                    noStyle\n                    rules={[\n                      { required: true, message: \"票号必须输入\" },\n                      {\n                        pattern: /[0-9]/,\n                        message: \"票号只能是数字\",\n                      },\n                      { max: 5, message: \"票号不能超过5位\" },\n                    ]}\n                  >\n                    <Input\n                      style={{ width: 80, textAlign: \"center\" }}\n                      placeholder=\"起始\"\n                    />\n                  </Form.Item>\n                  <Input\n                    style={{\n                      width: 30,\n                      borderLeft: 0,\n                      borderRight: 0,\n                      pointerEvents: \"none\",\n                      backgroundColor: \"#fff\",\n                    }}\n                    placeholder=\"~\"\n                    disabled\n                  />\n                  <Form.Item\n                    name={[\"ticketNumbers\", \"end\"]}\n                    rules={[\n                      { required: true, message: \"票号必须输入\" },\n                      {\n                        pattern: /[0-9]/,\n                        message: \"票号只能是数字\",\n                      },\n                      { max: 5, message: \"票号不能超过5位\" },\n                    ]}\n                    noStyle\n                  >\n                    <Input\n                      className=\"site-input-right\"\n                      style={{\n                        width: 80,\n                        textAlign: \"center\",\n                      }}\n                      placeholder=\"结束\"\n                    />\n                  </Form.Item>\n                </>\n              ) : (\n                <Form.Item\n                  name=\"ticketNumber\"\n                  noStyle\n                  rules={[\n                    { required: true, message: \"票号必须输入\" },\n                    {\n                      pattern: /[0-9]/,\n                      message: \"票号只能是数字\",\n                    },\n                    { max: 5, message: \"票号不能超过5位\" },\n                  ]}\n                >\n                  <Input style={{ width: 200 }} />\n                </Form.Item>\n              )}\n            </Input.Group>\n          </Form.Item>\n          <Form.Item\n            label=\"收票方\"\n            name=\"client\"\n            rules={[{ required: true, message: \"必须输入收票方\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"经手人\"\n            name=\"operator\"\n            rules={[{ required: true, message: \"必须输入经手人\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"票种\"\n            name=\"type\"\n            rules={[{ required: true, message: \"必须输入票种\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"备注\" name=\"notes\">\n            <Input.TextArea row={4} />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n\n  const auth = (\n    <div>\n      <Modal\n        okButtonProps={{ htmlType: \"submit\", form: \"auth\" }}\n        title=\"请输入密码\"\n        visible\n      >\n        <Form\n          name=\"auth\"\n          onFinish={(values) => {\n            axios\n              .post(`${API}/auth`, { password: values.password })\n              .then((res) => {\n                localStorage.setItem(\"token\", res.data.token)\n                setTOKEN(res.data.token)\n              })\n              .catch((error) => {\n                console.error(error);\n                notification.error({\n                  message:'登录失败'\n                })\n              });\n          }}\n        >\n          <Form.Item name=\"password\" rules={[{ required: true }]} label=\"密码\">\n            <Input />\n          </Form.Item>\n        </Form>\n      </Modal>\n    </div>\n  );\n\n  return TOKEN ? app : auth;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  //<React.StrictMode>\n  <App />,\n  //</React.StrictMode>\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}